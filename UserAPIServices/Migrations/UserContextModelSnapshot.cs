// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserAPIServices.Context;

namespace UserAPIServices.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserAPIServices.Entities.Airline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAddress")
                        .HasColumnName("ContactAddress")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ContactNumber")
                        .HasColumnName("ContactNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("UserAPIServices.Entities.BookingPersons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("FlightBookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("NonVeg")
                        .HasColumnName("NonVeg")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(16,2)");

                    b.Property<int>("SeatNo")
                        .HasColumnName("SeatNo")
                        .HasColumnType("int");

                    b.Property<bool>("Veg")
                        .HasColumnName("Veg")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FlightBookingId");

                    b.ToTable("BookingPersons");
                });

            modelBuilder.Entity("UserAPIServices.Entities.Discount", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CouponName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("UserAPIServices.Entities.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("FlightId")
                        .HasColumnName("FlightId")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnName("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasColumnName("FromLocation")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("NoOfBUSeats")
                        .HasColumnName("NoOfBUSeats")
                        .HasColumnType("int");

                    b.Property<int>("NoOfNONBUSeats")
                        .HasColumnName("NoOfNONBUSeats")
                        .HasColumnType("int");

                    b.Property<int>("NoOfRows")
                        .HasColumnName("NoOfRows")
                        .HasColumnType("int");

                    b.Property<bool>("NonVeg")
                        .HasColumnName("NonVeg")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Sheduled")
                        .HasColumnName("Sheduled")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnName("ToLocation")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("Veg")
                        .HasColumnName("Veg")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("UserAPIServices.Entities.FlightBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnName("ContactNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnName("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .HasColumnName("FromLocation")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("NoOfBUSeats")
                        .HasColumnName("NoOfBUSeats")
                        .HasColumnType("int");

                    b.Property<int?>("NoOfNONBUSeats")
                        .HasColumnName("NoOfNONBUSeats")
                        .HasColumnType("int");

                    b.Property<string>("PNRNumber")
                        .HasColumnName("PNRNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RegisteredMailId")
                        .HasColumnName("MailId")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SeatNos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnName("ToLocation")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(16,2)");

                    b.Property<Guid?>("UserRegistrestionId")
                        .HasColumnName("UserRegistrestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserRegistrestionId");

                    b.ToTable("FlightBooking");
                });

            modelBuilder.Entity("UserAPIServices.Entities.UserRegistrestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Mobile")
                        .HasColumnName("Mobile")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Password")
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Role")
                        .HasColumnName("Role")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserRegistrestion");
                });

            modelBuilder.Entity("UserAPIServices.Entities.BookingPersons", b =>
                {
                    b.HasOne("UserAPIServices.Entities.FlightBooking", "FlightBooking")
                        .WithMany("BookingPersons")
                        .HasForeignKey("FlightBookingId");
                });

            modelBuilder.Entity("UserAPIServices.Entities.Flight", b =>
                {
                    b.HasOne("UserAPIServices.Entities.Airline", "Airline")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId");
                });

            modelBuilder.Entity("UserAPIServices.Entities.FlightBooking", b =>
                {
                    b.HasOne("UserAPIServices.Entities.Airline", "Airline")
                        .WithMany("FlightBookings")
                        .HasForeignKey("AirlineId");

                    b.HasOne("UserAPIServices.Entities.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");

                    b.HasOne("UserAPIServices.Entities.UserRegistrestion", "UserRegistrestion")
                        .WithMany()
                        .HasForeignKey("UserRegistrestionId");
                });
#pragma warning restore 612, 618
        }
    }
}
